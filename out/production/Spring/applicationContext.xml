<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
">
    <context:property-placeholder location="classpath:db.properties"/>
    <context:component-scan base-package="com.itheima.service"/>
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxTotal" value="${jdbc.maxTotal}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
     </bean>

    <bean id="customerDao" class="com.itheima.impl.CustomerDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="customerMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.itheima.mapper.CustomerMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <!--<bean id="userDao" class="com.itheima.ioc.UserDaoImpl"></bean>-->
    <!--<bean id="userService" class="com.itheima.ioc.UserServiceImpl">-->
        <!--<property name="userDao" ref="userDao"></property>-->
    <!--</bean>-->
    <bean id="bean2" class="com.itheima.instance.static_factory.MyBeanFactory"
        factory-method="createBean"
    ></bean>
    <bean id="MyBean3Factory" class="com.itheima.instance.factory.MyBean3Factory"></bean>
    <bean id="bean3" factory-bean="MyBean3Factory" factory-method="createBean"></bean>

    <!--1目标类 -->
    <bean id = "userDao" class="com.itheima.jdk.UserDaoImpl"></bean>
    <!--2切面类 -->
    <bean id="myAspect" class="com.itheima.factorybean.MyAspect"></bean>
    <!-- 3使用Spring代理工厂定义一个名称为userDaoProxy的代理对象-->
    <bean id="userDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--3.1指定代理实现的借口 -->
        <property name="proxyInterfaces" value="com.itheima.jdk.UserDao"></property>
        <!--3.2指定目标对象 -->
        <property name="target" ref="userDao"></property>
        <!--3.3指定切面，植入环绕通知 -->
        <property name="interceptorNames" value="myAspect"></property>
        <!--3.4指定代理方式:true:使用cglib;false(默认):使用jdk动态代理 -->
        <property name="proxyTargetClass" value="true"></property>
    </bean>


</beans>